<script type="text/javascript" src="/static/js/jquery.min.js"></script>
<script type="text/javascript" src="/static/css/bootstrap/js/bootstrap.js"></script>
<script type="text/javascript" src="/static/js/d3.v3.min.js"></script>
<style>
            #chart rect{
			  fill: #4aaeea;
			}

			#chart text{
			  fill: white;
			  font: 10px sans-serif;
			  text-anchor: end; 
			}

			.axis text{
			  font: 10px sans-serif;
			}

			.axis path, .axis line{
			  fill: none;
			  stroke : #fff;
			  shape-rendering: crispEdges;
			}

			body{
			  background: #1a1a1a;
			  color : #eaeaea;
			  padding : 10px;
			}

</style>
        
		
<script>
var margin ={top:20, right:30, bottom:30, left:100},
    width=960-margin.left - margin.right, 
    height=500-margin.top-margin.bottom;

// scale to ordinal because x axis is not numerical
var x = d3.scale.ordinal().rangeRoundBands([0, width], .1);

//scale to numerical value by height
var y = d3.scale.linear().range([height, 0]);

var chart = d3.select("#chart")  
              .append("svg")  //append svg element inside #chart
              .attr("width", width+(2*margin.left)+margin.right+100)    //set width
              .attr("height", height+margin.top+margin.bottom+120) //set height
			  //.attr("transform", "translate(" + 100 + "," + 100 + ")");
var xAxis = d3.svg.axis()
              .scale(x)
              .orient("bottom");  //orient bottom because x-axis will appear below the bars

var yAxis = d3.svg.axis()
              .scale(y)
              .orient("left");

d3.json("output.json", function(error, data){
  //x.domain(data.map(function(d){ return d.letter}));
  //y.domain([0, d3.max(data, function(d){return d.frequency})]);
  
  x.domain(d3.keys(data[0]));
  //console.log(d3.keys(data[0]));
  y.domain([0, d3.max(d3.values(data[0]))+0.01]);
  console.log(d3.entries(data[0]));
  
  var bar = chart.selectAll("g")
                    .data(d3.entries(data[0]))
                  .enter()
                    .append("g")
                    .attr("transform", function(d, i){
					//console.log(d);
					//alert(d);
                      return "translate("+x(d.key)+", 0)";
                    });
  
  bar.append("rect")
      .attr("y", function(d) { 
	  
	  //console.log(d);
        return y(d.value); 
      })
      .attr("x", function(d,i){
        return x.rangeBand() + 40;
      })
      .attr("height", function(d) { 
        return height - y(d.value); 
      })
      .attr("width", 50);  //set width base on range on ordinal data

  bar.append("text")
      .attr("x", x.rangeBand()+margin.left +25 )
      .attr("y", function(d) { return y(d.value) -10; })
      .attr("dy", ".75em")
      .text(function(d) { return d.value; });
	  
  
  chart.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate("+margin.left+","+ height+")")        
        .call(xAxis)
		.selectAll("text")
		.attr("y", 0)
		.attr("x", 29)
		.attr("dy", ".35em")
		.attr("transform", "rotate(90)")
		.style("text-anchor", "start");
		
  chart.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate("+margin.left+",0)")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("dy", ".71em")
        .style("text-anchor", "end")
        .text("Weight");
});

function type(d) {
    d.letter = +d.letter; // coerce to number
    return d;
  }
</script>

		